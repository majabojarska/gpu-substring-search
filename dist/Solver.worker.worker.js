(()=>{"use strict";var t={183:(t,e)=>{new(function(){function t(){this.ctx=self,this.ctx.onmessage=this.handleMessage.bind(this),this.ctx.postMessage({ready:!0})}return t.prototype.handleMessage=function(t){var e={matches:null,error:null};try{this.checkInputPayload(t.data),e.matches=this.solve(t.data)}catch(t){e.error=t}this.ctx.postMessage(e)},t.prototype.checkInputPayload=function(t){if(t.text.length<1)throw Error("Text must be at least 1 character long (is "+t.text.length+").");if(t.pattern.length<1)throw Error("Pattern must be at least 1 character long (is "+t.pattern.length+").");if(t.pattern.length>t.text.length)throw Error("Pattern can't be longer than text \n        (pattern length: "+t.pattern.length+", \n        text length: "+t.text.length+")");if(t.end<1)throw Error("Offset end must be a positive integer (is "+t.end+").");if(t.start<0)throw Error("Offset must be a non-negative integer (is "+t.start+").");if(t.start>t.end)throw Error("Start index ("+t.start+") is greater than end index ("+t.end+").");if(t.end+t.pattern.length-1>t.text.length)throw Error("Pattern matching (pattern.length "+t.pattern.length+")\n        would reach beyond the available text (length "+t.text.length+").")},t.prototype.solve=function(t){for(var e=[],r=t.start;r<t.end;++r){for(var n=!1,a=0;a<t.pattern.length;++a){var s=r+a;if(t.text[s]!=t.pattern[a]){n=!0;break}}n||e.push(r)}return e},t}())}},e={};!function r(n){if(e[n])return e[n].exports;var a=e[n]={exports:{}};return t[n](a,a.exports,r),a.exports}(183)})();